#!/bin/sh

# colors
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
NC='\033[0m'

# emojis
checkmark='\xE2\x9C\x94'
crossmark='\xE2\x9C\x96'

echo
echo "[ pre-commit checks ]"

if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  # initial commit: diff against an empty tree object
  # change it to match your initial commit sha
  against=123acdac4c698f24f2352cf34c3b12e246b48af1
fi

# get only the staged files
RB_FILES="$(git diff --cached --name-only --diff-filter=AMC | grep "\.rb$" | tr '\n' ' ')"

if [ -n "$RB_FILES" ]
then
  if [ ! -f '.rubocop.yml' ]; then
    echo "\n  ${yellow}[rubocop]: no .rubocop.yml config file.${NC}\n"
  fi

  # run rubocop on the staged ruby files
  echo
  rubocop ${RB_FILES}

  if [ $? -ne 0 ]; then
    rubocop_pass=false
  else
    rubocop_pass=true
  fi
else
  rubocop_pass=true
fi

# get only the staged files
JS_FILES="$(git diff --cached --name-only --diff-filter=AMC | grep "\.js[x]*$" | tr '\n' ' ')"

if [ -n "$JS_FILES" ]
then
  if [ ! -f '.eslintrc' ]; then
    echo "\n  ${yellow}[eslint] no .eslintrc config file.${NC}\n"
  fi

  # run eslint on the staged js files
  echo
  eslint ${JS_FILES}

  if [ $? -ne 0 ]; then
    eslint_pass=false
  else
    eslint_pass=true
  fi
else
  eslint_pass=true
fi

# print summary
echo
if ${rubocop_pass}; then
  printf "  [ ${green}${checkmark}${NC} ] "
else
  printf "  [ ${red}${crossmark}${NC} ] "
fi
echo "rubocop"

if ${eslint_pass}; then
  printf "  [ ${green}${checkmark}${NC} ] "
else
  printf "  [ ${red}${crossmark}${NC} ] "
fi
echo "eslint"

echo
if ${rubocop_pass} && ${eslint_pass}; then
  exit 0
else
  echo "Commit ${yellow}anyway${NC}? [ y/n ]"
  printf "$ "
  exec < /dev/tty
	read resp

	if [ "$resp" = 'y' -o "$resp" = 'Y' ]; then
    exit 0
  else
    exit 1
  fi
fi
